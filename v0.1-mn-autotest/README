1. STC.INFO     : Basic information of Storage Test Collection (STC)
2. run_tests.sh : Wrapper to run all cases residing in directory ./tests
3. lib          : Lib functions
4. tests        : Demo test cases
5. sandbox/sample_results : sample results
   sandbox/tools          : some handy tools for helping to write C, Bash
                  or Python code with high efficiency

	.
	├── lib
	│   ├── libcommon.sh
	│   └── libstr.sh
	├── README
	├── run -> run_tests.sh
	├── run_tests.sh
	├── sandbox
	│   ├── sample_results
	│   │   ├── journal
	│   │   └── summary
	│   ├── s.bashrc
	│   └── tools
	│       ├── dos2unix
	│       ├── icat
	│       ├── imod
	│       └── ipyman
	├── STC.INFO
	└── tests
	    ├── cleanup.sh
	    ├── setup.sh
	    ├── tc_foo_pos001.sh
	    └── tc_foo_pos002.sh

	5 directories, 17 files

	NOTE:
	1. setup.sh and cleanup.sh are optional
	2. test cases must start with prefix "tc_"
	   which is by design (pls refer to run_tests.sh)

Q: How to run?
A: Easy, e.g.

	bash$ sudo ./run -e

	Journal file: /tmp/oak/results/journal.20170418135002.i686
	Summary file: /tmp/oak/results/summary.journal.20170418135002.i686

	Running root setup : setup.............................................. PASS

	Running root test case : ./tests/tc_foo_pos001.sh....................... FAIL
	Running root test case : ./tests/tc_foo_pos002.sh....................... PASS

	Running root cleanup : cleanup.......................................... PASS

	********************************************************************************
	*                                                                              *
	*                                   Summary                                    *
	*                                   =======                                    *
	*                                                                              *
	* STC_VERSION  : 0.1                                                           *
	*                                                                              *
	* Number of TC :   2                                                           *
	* PASS         :   1                                                           *
	* FAIL         :   1                                                           *
	********************************************************************************

	Journal file: /tmp/oak/results/journal
	Summary file: /tmp/oak/results/summary

	bash$

OR (run a single case)

	bash$ sudo ./tests/tc_foo_pos001.sh
	################################################################################
	#
	# ID:   foo/tc_foo_pos001
	#
	# DESCRIPTION:
	#       Dummy Test pos001
	#
	# STRATEGY:
	#       1. issue "ls -l /tmp", expect to pass
	#       2. issue "uname -a | grep oak", expect to pass
	#
	################################################################################
	[ PASS ] RUN_POS: ls -l /tmp, passed definitely # $?=0
	---1---: total 20
	---1---: -rw-r--r-- 1 veli veli  582 Apr 18 13:40 a
	---1---: drwxr-xr-x 3 root root 4096 Apr 18 13:37 oak
	---1---: -rw-r--r-- 1 veli veli    0 Apr 18 13:51 _RUN.out.1492494704.8754.21667
	---1---: -rw-r--r-- 1 veli veli    0 Apr 18 13:51 _RUN.tmp.1492494704.8754.21667
	---1---: drwxrwxrwt 2 root root 4096 Apr 18 08:54 VMwareDnD
	---1---: drwxr-xr-x 2 root root 4096 Apr 18 08:54 vmware-root
	---1---: drwx------ 2 root root 4096 Apr 18 08:54 vmware-root-3988621819
	[ FAIL ] RUN_POS: uname -a | grep oak # $?=1
	Linux ubuntu 3.16.0-30-generic #40~14.04.1-Ubuntu SMP Thu Jan 15 17:45:15 UTC 2015 i686 i686 i686 GNU/Linux
	[ XRES ] tc_foo_pos001.sh : FAIL
	bash$
